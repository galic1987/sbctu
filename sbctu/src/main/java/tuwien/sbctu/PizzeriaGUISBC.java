/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tuwien.sbctu;

import java.rmi.AccessException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;

import tuwien.sbctu.models.GuestGroup;
import tuwien.sbctu.models.Order;
import tuwien.sbctu.models.Pizza;
import tuwien.sbctu.models.Table;
import tuwien.sbctu.rmi.RunGuestGroup;
import tuwien.sbctu.rmi.implement.LoggingRMIImpl;
import tuwien.sbctu.rmi.interfaces.ILoggingRMI;
import tuwien.sbctu.rmi.interfaces.IPizzeriaRMI;

/**
 *
 * @author Adnan
 */
public class PizzeriaGUISBC extends javax.swing.JFrame {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private static boolean isActive;
	private IPizzeriaRMI pizzeriaRMI;
	private static int port;
	private static String bindingName;
	
	private static ILoggingRMI ilog;
	private int idCounter = 0;
	
    /**
     * Creates new form PizzeriaGUI
     */
    public PizzeriaGUISBC() {
        initComponents();
        isActive = true;
        port = 10879;
        bindingName = "pizzeria";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        guestTXT = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTXT = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ordersTXT = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        pizzasTXT = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        guestTXT.setColumns(20);
        guestTXT.setRows(5);
        jScrollPane1.setViewportView(guestTXT);

        jLabel1.setText("Add new guests, person count: ");

        jLabel2.setText("group count:");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        tableTXT.setColumns(20);
        tableTXT.setRows(5);
        jScrollPane2.setViewportView(tableTXT);

        jLabel3.setText("");

        ordersTXT.setColumns(20);
        ordersTXT.setRows(5);
        jScrollPane3.setViewportView(ordersTXT);

        jLabel4.setText("Tables:");

        pizzasTXT.setColumns(20);
        pizzasTXT.setRows(5);
        jScrollPane5.setViewportView(pizzasTXT);

        jLabel6.setText("Pizzas:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3)
                        .addComponent(jScrollPane1)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel3))
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addBtn)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    	Integer size = Integer.valueOf(jTextField1.getText());
    	Integer groups = Integer.valueOf(jTextField2.getText());
    	
    	for(int i = 0 ; i < groups; i++){
    		idCounter++;
    		Thread group = new Thread(new RunGuestGroup( new Long(idCounter+1000), port, bindingName, size));
    		group.start();
    	}
    	jTextField1.setText("");
    	jTextField2.setText("");
    }                                      

    /**
     * @param args the command line arguments
     */
//  public static PizzeriaGUI returnGUI;
  /*
    public static void main(String args[]) {
  
         Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PizzeriaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PizzeriaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PizzeriaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PizzeriaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

       Create and display the form 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                returnGUI = new PizzeriaGUI();
//                returnGUI.setVisible(true);
                
                SwingUtilities.invokeLater(new Runnable() {
                    public void run() {                	
							returnGUI.subscribeToRMI();
							returnGUI.updateFields();
                    }
                  });

                
            }
            
            
            
        });
    }*/
    
    public void subscribeToRMI(){
    	pizzeriaRMI = getEntry(port, bindingName);
    	
    	try {
    		
    		ilog = new LoggingRMIImpl();
    		
			pizzeriaRMI.subscribeGUI(ilog);
		
    	} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    
    public void subscribeToSBC(){
 	
    }
    
    private IPizzeriaRMI getEntry(Integer port, String bindingName){
		Registry registry = null;

		try {
			registry = LocateRegistry.getRegistry(port);
		} catch (RemoteException e1) {
			e1.printStackTrace();
		}

		IPizzeriaRMI entry = null;

		try {
			entry = (IPizzeriaRMI) registry.lookup(bindingName);
		} catch (NotBoundException e) {
			e.printStackTrace();
		} catch (AccessException e) {
			e.printStackTrace();
		} catch (RemoteException e) {
			e.printStackTrace();
		}

		return entry;
	}
    
    public void updateFields(ArrayList<Order> orders,
    ArrayList<Table> tablesArr,
    ArrayList<GuestGroup> guestsEntry ){
    	

    	
    	
    	if(tablesArr.size()>0){

	    	for (Table t : tablesArr){
	    		
	    		Order o = t.getOrder();
	    		
	    		for(Pizza p : o.getPizzaList()){
	        		System.out.println(o.toString());
	        		pizzasTXT.append(p.toString()+"\n");
	    		}
	        	
	    		
	    		System.out.println(t.toString());
	    		ordersTXT.append(t.toString()+"\n");
	    	}
    	
    	}
    	
    	String guestString = "";
    	for (GuestGroup g : guestsEntry){
    		guestString += "->Guest ID: " +g.getId()+ " STATUS: " +g.getCurrentStatus().toString()  + " Size: " +g.getGroupSize(); 
    		//System.out.println(g.toString());

    	}
    	guestTXT.append(guestString+"\n");
    	
    	
    	
    	
    	/*
//		if(pizzeriaRMI!=null){	
    	try {
			String bill = ilog.getBill();
			String cook = ilog.getCook();
			String guest = ilog.getGuest();
			String order = ilog.getOrder();
			String pizza = ilog.getPizza();
			String table = ilog.getTable();
			String waiter = ilog.getWaiter();
			
			if(guest!=null){
			String olGuest = guestTXT.getText(); 
			guestTXT.setText(olGuest+"\n"+guest);
			}
			if(bill!=null){
			String olGuest = guestTXT.getText();
			guestTXT.setText(olGuest+"\n"+bill);
			}
			if(order!=null){
			String olOrder = guestTXT.getText();
			ordersTXT.setText(olOrder+"\n"+order);
			}
			if(pizza!=null){
			String olPizza = pizzasTXT.getText();
			pizzasTXT.setText(olPizza+"\n"+pizza);
			}
			if(table!=null){
			String olTable = tableTXT.getText();
			tableTXT.setText(olTable+"\n"+table);
			}
			
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		} catch (RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
//    	}
*/
    
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton addBtn;
    private javax.swing.JTextArea guestTXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextArea ordersTXT;
    private javax.swing.JTextArea pizzasTXT;
    private javax.swing.JTextArea tableTXT;
    // End of variables declaration                   
}
