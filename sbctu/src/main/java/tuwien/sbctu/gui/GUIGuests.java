/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tuwien.sbctu.gui;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import tuwien.sbctu.gui.tablemodels.DeliveryTableModel;
import tuwien.sbctu.gui.tablemodels.GroupsTableModel;
import tuwien.sbctu.models.GuestDelivery;
import tuwien.sbctu.models.GuestGroup;
import tuwien.sbctu.models.Order;

/**
 *
 * @author Adnan
 */
public class GUIGuests extends javax.swing.JFrame {
    
    private final String DELIVERY_COUNT_TXT = "Delivery count:";
    private final String DELIVERY_ADDRESS_TXT = "Delivery address:";
    private final String GROUP_COUNT_TXT = "Group count:";
    private final String GROUP_SIZE_TXT = "Group size:";
    
    private boolean isActive;
    private boolean delivery;
    
    ArrayList<GuestGroup> guestGroupInfo;
    ArrayList<GuestDelivery> guestDeliveryInfo;
    
    ArrayList<GuestGroup> createdGroup;
    ArrayList<GuestDelivery> createdDelivery;
    
    private IGuestGUI guestTableInformation;
    
    /**
     * Creates new form GuestGroupGUI
     */
    
    public GUIGuests() {
        initComponents();
        
        delivery = false;
        prepareFields();
        isActive = true;
        
        guestGroupInfo = new ArrayList<>();
        guestDeliveryInfo = new ArrayList<>();
        
        createdGroup = new ArrayList<>();
        createdDelivery = new ArrayList<>();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        guestTable = new javax.swing.JTable();
        txtSize = new javax.swing.JTextField();
        txtOthers = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        pizza1 = new javax.swing.JComboBox();
        pizza2 = new javax.swing.JComboBox();
        pizza3 = new javax.swing.JComboBox();
        pizza4 = new javax.swing.JComboBox();
        inProcessBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        guestType = new javax.swing.JComboBox();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        deliveryTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        guestTable.setModel(new tuwien.sbctu.gui.tablemodels.GroupsTableModel());
        jScrollPane1.setViewportView(guestTable);

        txtSize.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSizeFocusLost(evt);
            }
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSizeFocusGained(evt);
            }
        });

        txtOthers.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtOthersFocusLost(evt);
            }
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOthersFocusGained(evt);
            }
        });

        pizza1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pizza#1", "Margarita", "Salami", "Cardinale" }));
        pizza1.setEnabled(false);

        pizza2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pizza#2", "Margarita", "Salami", "Cardinale" }));
        pizza2.setEnabled(false);

        pizza3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pizza#3", "Margarita", "Salami", "Cardinale" }));
        pizza3.setEnabled(false);

        pizza4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pizza#4", "Margarita", "Salami", "Cardinale" }));
        pizza4.setEnabled(false);

        inProcessBtn.setText("Process");
        inProcessBtn.setPreferredSize(new java.awt.Dimension(70, 25));
        inProcessBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inProcessBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Deliveries");

        jLabel6.setText("Guests");

        guestType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Group", "Delivery" }));
        guestType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                guestTypeItemStateChanged(evt);
            }
        });

        deliveryTable.setModel(new tuwien.sbctu.gui.tablemodels.GroupsTableModel());
        jScrollPane3.setViewportView(deliveryTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(guestType, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pizza1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pizza2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pizza3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pizza4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSize, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtOthers)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inProcessBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel6)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSize)
                            .addComponent(txtOthers))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pizza3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pizza2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pizza4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(pizza1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(guestType)
                    .addComponent(inProcessBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void guestTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_guestTypeItemStateChanged
        
        if(evt.getStateChange()==1){
            
            if(evt.getItem().equals("Group"))
                delivery = false;
            else if (evt.getItem().equals("Delivery"))
                delivery = true;
        }
        
        prepareFields();
        
    }//GEN-LAST:event_guestTypeItemStateChanged
    
    private void txtSizeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSizeFocusGained
        
        txtSize.setText("");
    }//GEN-LAST:event_txtSizeFocusGained
    
    private void txtOthersFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOthersFocusGained
        
        txtOthers.setText("");
    }//GEN-LAST:event_txtOthersFocusGained
    
    private void txtSizeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSizeFocusLost
        
        String getSize = txtSize.getText();
        if(!numbersInField(getSize))
            prepareFields();
        
    }//GEN-LAST:event_txtSizeFocusLost
    
    private void txtOthersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOthersFocusLost
        
        String getOthers = txtOthers.getText();
        String getSize = txtSize.getText();
        
        if(numbersInField(getSize)){
            if(!delivery){
                if(getOthers.matches("[0-9]*"))
                    enablePizzas(Integer.valueOf(getSize), true);
                else
                    prepareFields();
            }
            else
                enablePizzas(Integer.valueOf(getSize), true);
        }
        
    }//GEN-LAST:event_txtOthersFocusLost
    
    private void inProcessBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inProcessBtnActionPerformed
        // TODO create threads
        
        if(!delivery){
            //            tuwien.sbctu.gui.tablemodels.GroupsTableModel gtm = new tuwien.sbctu.gui.tablemodels.GroupsTableModel();
            for(int i = 0; i < Integer.valueOf(txtOthers.getText());i++){
                GuestGroup gg = new GuestGroup(new Long(i+100));
                gg.setGroupSize(Integer.valueOf(txtSize.getText()));
                gg.setStatus(GuestGroup.GroupStatus.ENTERED);
                gg.setOrder(prepareOrder());
                //                gtm.add(gg);
                guestTableInformation.setGroupInfo(gg);
                
                
            }
            //        guestTable.setModel(gtm);
            //        guestTable.setRowHeight(guestTable.getRowHeight()*4);
            //        table.setDefaultRenderer(String.class, new MultiLineCellRenderer());
        }
        
        else if(delivery){
            //            tuwien.sbctu.gui.tablemodels.DeliveryTableModel gtm = new tuwien.sbctu.gui.tablemodels.DeliveryTableModel();
            for(int i = 0; i < Integer.valueOf(txtOthers.getText());i++){
                GuestDelivery gd = new GuestDelivery(new Long(i+100));
                //                gg.setGroupSize(Integer.valueOf(txtSize.getText()));
                gd.setStatus(GuestDelivery.DeliveryStatus.DELIVERY);
                gd.setOrder(prepareOrder());
                //                gtm.add(gd);
                guestTableInformation.setDeliveryInfo(gd);
            }
            //        deliveryTable.setModel(gtm);
        }
        
        prepareFields();
        enablePizzas(4,false);
    }//GEN-LAST:event_inProcessBtnActionPerformed
    
    private boolean numbersInField(String getSize){
        return getSize.matches("[1-4]");
    }
    private Order prepareOrder(){
        Order or = new Order();
        
        if(pizza1.isEnabled()){
            tuwien.sbctu.models.Pizza pizza = new tuwien.sbctu.models.Pizza(pizza1.getSelectedItem().toString(), 0.0,1);
            or.addPizzaToOrder(pizza);
        }
        if(pizza2.isEnabled()){
            tuwien.sbctu.models.Pizza pizza = new tuwien.sbctu.models.Pizza(pizza2.getSelectedItem().toString(), 0.0,1);
            or.addPizzaToOrder(pizza);
        }
        if(pizza3.isEnabled()){
            tuwien.sbctu.models.Pizza pizza = new tuwien.sbctu.models.Pizza(pizza3.getSelectedItem().toString(), 0.0,1);
            or.addPizzaToOrder(pizza);
        }
        if(pizza4.isEnabled()){
            tuwien.sbctu.models.Pizza pizza = new tuwien.sbctu.models.Pizza(pizza4.getSelectedItem().toString(), 0.0,1);
            or.addPizzaToOrder(pizza);
        }
        
        return or;
    }
    
    private void prepareFields(){
        if(!delivery){
            txtSize.setText(GROUP_SIZE_TXT);
            txtOthers.setText(GROUP_COUNT_TXT);
        }
        else if(delivery){
            txtSize.setText(DELIVERY_COUNT_TXT);
            txtOthers.setText(DELIVERY_ADDRESS_TXT);
        }
        enablePizzas(4,false);
    }
    
    private void enablePizzas(int pizzaCount, boolean flag){
        for(int i = 0; i < pizzaCount; i++)
            getPizzaCombo(i).setEnabled(flag);
    }
    
    private javax.swing.JComboBox getPizzaCombo(int arg){
        javax.swing.JComboBox result = null;
        switch(arg){
            case 0:
                pizza1.setSelectedIndex(0);
                result = this.pizza1;
                break;
            case 1:
                pizza2.setSelectedIndex(0);
                result = this.pizza2;
                break;
            case 2:
                pizza3.setSelectedIndex(0);
                result = this.pizza3;
                break;
            case 3:
                pizza4.setSelectedIndex(0);
                result = this.pizza4;
                break;
        }
        return result;
    }
    
    public void setGuestTableInformationInterface(IGuestGUI gti){
        guestTableInformation = gti;
    }
    public void activateThread(){
        Updater up = new Updater();
        
        up.start();
    }
    public void updateTables(){
        
        //                System.out.println("started gui: updateTables()");
        //        while(isActive){
        //
        GuestGroup ggi = guestTableInformation.getGroupInfo();
        
        if(ggi != null)
            updateGroup(ggi);
        
        //                updateDelivery();
        
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(GUIGuests.class.getName()).log(Level.SEVERE, null, ex);
        }
        //
        //        }
    }
    
    private void updateGroup(GuestGroup ggi){
        boolean foundGG = false;
        GroupsTableModel gtm = new GroupsTableModel();
        
        if(!guestGroupInfo.isEmpty()){
            for(GuestGroup gg : guestGroupInfo){
                
                if(gg.getId().equals(ggi.getId())){
                    gg.setStatus(ggi.getStatus());
                    foundGG = true;
                }
            }
        }
        
        if (!foundGG)
            guestGroupInfo.add(ggi);
        
        if(!guestGroupInfo.isEmpty()){
            for(GuestGroup gg : guestGroupInfo)
                gtm.add(gg);
            
        }
        guestTable.setModel(gtm);
    }
    
    private void updateDelivery(){
        boolean foundGG = false;
        DeliveryTableModel dtm = new DeliveryTableModel();
        GuestDelivery gdi = guestTableInformation.getDeliveryInfo();
        
        if(!guestDeliveryInfo.isEmpty()){
            for(GuestDelivery gg : guestDeliveryInfo){
                
                if(gg.getId().equals(gdi.getId())){
                    gg.setCurrentStatus(gdi.getCurrentStatus());
                    foundGG = true;
                }
            }
        }
        
        if (!foundGG)
            guestDeliveryInfo.add(gdi);
        
        if(!guestDeliveryInfo.isEmpty()){
            for(GuestDelivery gg : guestDeliveryInfo)
                dtm.add(gg);
            
            deliveryTable.setModel(dtm);
            
        }
    }
    
    private class Updater extends Thread {
        @Override
        public void run() {
            while (isActive){
                updateTables();
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIGuests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIGuests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIGuests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIGuests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIGuests().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable deliveryTable;
    private javax.swing.JTable guestTable;
    private javax.swing.JComboBox guestType;
    private javax.swing.JButton inProcessBtn;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox pizza1;
    private javax.swing.JComboBox pizza2;
    private javax.swing.JComboBox pizza3;
    private javax.swing.JComboBox pizza4;
    private javax.swing.JTextField txtOthers;
    private javax.swing.JTextField txtSize;
    // End of variables declaration//GEN-END:variables
}
